import './App.css'
import {useState} from 'react'
import TextAreaAutosize from 'react-textarea-autosize'

function App() {
	const [text, setText] = useState('')
	const [textTranslit, setTextTranslit] = useState('')
	const [previewStatus, setPreviewStatus] = useState(true)

	const toCopy = (text) => {
		setTextTranslit(text)
		navigator.clipboard.writeText(text)
	}

	const translit = (word) => {
		let answer = ''
		let converter = {
			–∞: 'a',
			–±: 'b',
			–≤: 'v',
			–≥: 'g',
			–¥: 'd',
			–µ: 'e',
			—ë: '…µ',
			–∂: '∆∂',
			–∑: 'z',
			–∏: 'i',
			–π: 'j',
			–∫: 'k',
			–ª: 'l',
			–º: 'm',
			–Ω: 'n',
			–æ: 'o',
			–ø: 'p',
			—Ä: 'r',
			—Å: 's',
			—Ç: 't',
			—É: 'u',
			—Ñ: 'f',
			—Ö: 'x',
			—Ü: '√ß',
			—á: 'c',
			—à: '≈ü',
			—â: 'sc',
			—å: 'j',
			—ã: '—å',
			—ä: '',
			—ç: 'e',
			—é: 'y',
			—è: '…ô',

			–ê: 'A',
			–ë: 'B',
			–í: 'V',
			–ì: 'G',
			–î: 'D',
			–ï: 'E',
			–Å: '∆ü',
			–ñ: '∆µ',
			–ó: 'Z',
			–ò: 'I',
			–ô: 'J',
			–ö: 'K',
			–õ: 'L',
			–ú: 'M',
			–ù: 'N',
			–û: 'O',
			–ü: 'P',
			–†: 'R',
			–°: 'S',
			–¢: 'T',
			–£: 'U',
			–§: 'F',
			–•: 'X',
			–¶: '√á',
			–ß: 'C',
			–®: '≈û',
			–©: 'Sc',
			–¨: 'J',
			–´: '–¨',
			–™: '',
			–≠: 'E',
			–Æ: 'Y',
			–Ø: '∆è',
		}

		for (let i = 0; i < word.length; ++i) {
			if (converter[word[i]] === undefined) {
				answer += word[i]
			} else {
				answer += converter[word[i]]
			}
		}

		return answer
	}

	const togglePreview = () => {
		if (previewStatus) {
			console.log('true')
			setPreviewStatus(false)
		} else {
			console.log('false')
			setPreviewStatus(true)
		}
	}

	return (
		<div className="App">
			<header>Custom Translit</header>

			<aside>
				<button onClick={togglePreview}>üëÅÔ∏è</button>
			</aside>

			<div className="TranslateOriginal">
				<TextAreaAutosize
					onChange={(e) => {
						setText(e.target.value)
						toCopy(translit(e.target.value))
					}}
					value={text}
					autoFocus={true}
					placeholder={'–ù–∞—á–∏–Ω–∞–π—Ç–µ –≤–≤–æ–¥–∏—Ç—å —Ç–µ–∫—Å—Ç'}
					className={'Textarea'}
				/>
			</div>

			<div className="TranslateNew">{previewStatus ? <pre>{textTranslit}</pre> : undefined}</div>
		</div>
	)
}

export default App
